{"version":3,"sources":["useFetchJobs.js","Job.js","JobsPagination.js","SearchForm.js","App.js","index.js"],"names":["ACTIONS","BASE_URL","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","Job","job","open","setOpen","useState","React","createElement","Card","className","Body","Title","jobTitle","employerName","Subtitle","Date","date","toLocaleDateString","Badge","variant","locationName","style","wordBreak","href","jobUrl","target","rel","Text","Button","onClick","prevOpen","Collapse","in","ReactMarkdown","jobDescription","JobsPagination","page","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","name","value","keywords","onChange","e","distanceFromLocation","xs","Check","checked","permanent","label","contract","minimumSalary","maximumSalary","App","setParams","dispatch","useReducer","useEffect","cancelToken1","axios","CancelToken","source","get","cancelToken","token","resultsToTake","resultsToSkip","headers","concat","btoa","then","res","data","results","catch","isCancel","totalResults","cancel","useFetchJobs","Container","param","prevParams","map","key","jobId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a11bc523.chunk.js","sourcesContent":["import { useReducer, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ACTIONS = {\r\n  MAKE_REQUEST: 'make-request',\r\n  GET_DATA: 'get-data',\r\n  ERROR: 'error',\r\n  UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\r\n};\r\n\r\n// Update BASE_URL to match Reed API endpoint for job search\r\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/https://www.reed.co.uk/api/1.0/search?keywords=software';\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case ACTIONS.MAKE_REQUEST:\r\n      return { loading: true, jobs: [] };\r\n    case ACTIONS.GET_DATA:\r\n      return { ...state, loading: false, jobs: action.payload.jobs };\r\n    case ACTIONS.ERROR:\r\n      return { ...state, loading: false, error: action.payload.error, jobs: [] };\r\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\r\n      return { ...state, hasNextPage: action.payload.hasNextPage };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default function useFetchJobs(params, page) {\r\n  const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true });\r\n\r\n  useEffect(() => {\r\n    const cancelToken1 = axios.CancelToken.source();\r\n    dispatch({ type: ACTIONS.MAKE_REQUEST });\r\n    axios.get(BASE_URL, {\r\n      cancelToken: cancelToken1.token,\r\n      params: { ...params, resultsToTake: 50, resultsToSkip: page * 50 },\r\n      headers: {\r\n        'Authorization': `Basic ${btoa('14ced952-950e-403c-b5d4-c69fa6fe3511:')}` // Note the colon at the end of the API key\r\n      }\r\n    }).then(res => {\r\n      dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data.results } });\r\n    }).catch(e => {\r\n      if (axios.isCancel(e)) return;\r\n      dispatch({ type: ACTIONS.ERROR, payload: { error: e } });\r\n    });\r\n\r\n    // Checking for the next page might need a different approach depending on the Reed API's response structure\r\n    const hasNextPageCheck = (data) => {\r\n      // This logic may need adjustment based on the Reed API's way of indicating the last page of results\r\n      return data.totalResults > (page + 1) * 50;\r\n    };\r\n\r\n    axios.get(BASE_URL, {\r\n      cancelToken: cancelToken1.token,\r\n      params: { ...params, resultsToTake: 50, resultsToSkip: (page + 1) * 50 },\r\n      headers: { 'Authorization': `Bearer your_api_key` }\r\n    }).then(res => {\r\n      dispatch({ type: ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: { hasNextPage: hasNextPageCheck(res.data) } });\r\n    }).catch(e => {\r\n      if (axios.isCancel(e)) return;\r\n      // You might want to handle this error differently or ignore if pagination check fails\r\n    });\r\n\r\n    return () => {\r\n      cancelToken1.cancel();\r\n    };\r\n  }, [params, page]);\r\n\r\n  return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Card, Badge, Button, Collapse } from 'react-bootstrap';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nexport default function Job({ job }) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <Card className=\"mb-3\">\r\n      <Card.Body>\r\n        <div className=\"d-flex justify-content-between\">\r\n          <div>\r\n            <Card.Title>\r\n              {job.jobTitle} - <span className=\"text-muted font-weight-light\">{job.employerName}</span>\r\n            </Card.Title>\r\n            <Card.Subtitle className=\"text-muted mb-2\">\r\n              {new Date(job.date).toLocaleDateString()}\r\n            </Card.Subtitle>\r\n            <Badge variant=\"secondary\">{job.locationName}</Badge>\r\n            <div style={{ wordBreak: 'break-all' }}>\r\n              <a href={job.jobUrl} target=\"_blank\" rel=\"noopener noreferrer\">Apply Here</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Card.Text>\r\n          <Button\r\n            onClick={() => setOpen(prevOpen => !prevOpen)}\r\n            variant=\"primary\">\r\n            {open ? 'Hide Details' : 'View Details'}\r\n          </Button>\r\n        </Card.Text>\r\n        <Collapse in={open}>\r\n          <div className=\"mt-4\">\r\n            <ReactMarkdown>{job.jobDescription}</ReactMarkdown>\r\n          </div>\r\n        </Collapse>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\n\r\nexport default function JobsPagination({ page, setPage, hasNextPage }) {\r\n  function adjustPage(amount) {\r\n    setPage(prevPage => prevPage + amount)\r\n  }\r\n\r\n  return (\r\n    <Pagination>\r\n      {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\r\n      {page !== 1 && <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>}\r\n      {page > 2 && <Pagination.Ellipsis />}\r\n      {page > 2 && <Pagination.Item onClick={() => adjustPage(-1)}>{page - 1}</Pagination.Item>}\r\n      <Pagination.Item active>{page}</Pagination.Item>\r\n      {hasNextPage && <Pagination.Item onClick={() => adjustPage(1)}>{page + 1}</Pagination.Item>}\r\n      {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\r\n    </Pagination>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Form, Col } from 'react-bootstrap';\r\n\r\nexport default function SearchForm({ params, onParamChange }) {\r\n  return (\r\n    <Form className=\"mb-4\">\r\n      <Form.Row className=\"align-items-end\">\r\n        {/* Keywords */}\r\n        <Form.Group as={Col}>\r\n        <Form.Label>Keywords</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          name=\"keywords\"\r\n          value={params.keywords || ''}\r\n          onChange={onParamChange} // Using onParamChange prop directly\r\n        />\r\n      </Form.Group>\r\n\r\n        {/* Location Name */}\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Location</Form.Label>\r\n          <Form.Control \r\n            onChange={(e) => onParamChange(e.target.name, e.target.value)} \r\n            value={params.locationName || ''} \r\n            name=\"locationName\" \r\n            type=\"text\" \r\n          />\r\n        </Form.Group>\r\n\r\n        {/* Distance From Location */}\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Distance (miles)</Form.Label>\r\n          <Form.Control \r\n            onChange={(e) => onParamChange(e.target.name, e.target.value)} \r\n            value={params.distanceFromLocation || ''} \r\n            name=\"distanceFromLocation\" \r\n            type=\"number\" \r\n          />\r\n        </Form.Group>\r\n      </Form.Row>\r\n\r\n      <Form.Row>\r\n        {/* Job Types */}\r\n        <Form.Group as={Col} xs=\"auto\">\r\n          <Form.Check \r\n            onChange={(e) => onParamChange(e.target.name, e.target.checked ? 'true' : 'false')} \r\n            checked={params.permanent === 'true'} \r\n            name=\"permanent\" \r\n            label=\"Permanent\" \r\n            type=\"checkbox\" \r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} xs=\"auto\">\r\n          <Form.Check \r\n            onChange={(e) => onParamChange(e.target.name, e.target.checked ? 'true' : 'false')} \r\n            checked={params.contract === 'true'} \r\n            name=\"contract\" \r\n            label=\"Contract\" \r\n            type=\"checkbox\" \r\n          />\r\n        </Form.Group>\r\n\r\n        {/* Salary Range */}\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Min Salary</Form.Label>\r\n          <Form.Control \r\n            onChange={(e) => onParamChange(e.target.name, e.target.value)} \r\n            value={params.minimumSalary || ''} \r\n            name=\"minimumSalary\" \r\n            type=\"number\" \r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Max Salary</Form.Label>\r\n          <Form.Control \r\n            onChange={(e) => onParamChange(e.target.name, e.target.value)} \r\n            value={params.maximumSalary || ''} \r\n            name=\"maximumSalary\" \r\n            type=\"number\" \r\n          />\r\n        </Form.Group>\r\n      </Form.Row>\r\n    </Form>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport useFetchJobs from './useFetchJobs'; // Ensure this is adapted for Reed API\r\nimport { Container } from 'react-bootstrap';\r\nimport Job from './Job'; // Ensure this displays job details correctly for Reed API\r\nimport JobsPagination from './JobsPagination'; // Adjust if necessary for API pagination\r\nimport SearchForm from './SearchForm'; // Already adjusted for Reed API\r\n\r\nfunction App() {\r\n  const [params, setParams] = useState({});\r\n  const [page, setPage] = useState(1);\r\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page);\r\n\r\n  function handleParamChange(e) {\r\n    const param = e.target.name;\r\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\r\n    setPage(1);\r\n    setParams(prevParams => {\r\n      return { ...prevParams, [param]: value };\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Container className=\"my-4\">\r\n      <h1 className=\"mb-4\">Reed Jobs</h1>\r\n      <SearchForm params={params} onParamChange={handleParamChange} />\r\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\r\n      {loading && <h1>Loading...</h1>}\r\n      {error && <h1>Error. Try Refreshing.</h1>}\r\n      {jobs.map(job => {\r\n        // Ensure the key and job prop passed to Job component are correct\r\n        return <Job key={job.jobId} job={job} />;\r\n      })}\r\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}